//This triggers color changes based on a Digit Fiddler animation with two keyframes.

// Define constants
const fadeDuration = 0.5;
const triggerParameter = thisComp.layer("1949").effect("Digit Fiddler")("Number");
const triggerValue = effect("Soviet Date")("Slider");
const triggerValue2 = effect("Nato Date")("Slider");
const triggerValue3 = effect("Invasion Date")("Slider");

// Retrieve keyframes and calculate trigger times
const firstKey = triggerParameter.key(1);
const secondKey = triggerParameter.key(2);
const triggerTime = (secondKey.time - firstKey.time) * ((triggerValue - firstKey.value) / (secondKey.value - firstKey.value)) + firstKey.time;
const triggerTime2 = (secondKey.time - firstKey.time) * ((triggerValue2 - firstKey.value) / (secondKey.value - firstKey.value)) + firstKey.time;
const triggerTime3 = (secondKey.time - firstKey.time) * ((triggerValue3 - firstKey.value) / (secondKey.value - firstKey.value)) + firstKey.time;

// Retrieve colors from Comp Control layer effects
const colorStart = thisComp.layer("Comp Control").effect("Russia/Belarus")("Color");
const colorTwo = thisComp.layer("Comp Control").effect("Former Soviet States")("Color");
const colorThree = thisComp.layer("Comp Control").effect("Nato Color Control")("Color");
const colorFour = thisComp.layer("Comp Control").effect("Imperiled Color")("Color");

// Apply color transitions based on trigger times
if (time >= triggerTime3) {
    linear(time, triggerTime3, triggerTime3 + fadeDuration, colorThree, colorFour);
} else {
    if (time >= triggerTime2) {
        linear(time, triggerTime2, triggerTime2 + fadeDuration, colorTwo, colorThree); 
    } else {
        if (time >= triggerTime) {
            linear(time, triggerTime, triggerTime + fadeDuration, colorStart, colorTwo); 
        } else {
            colorStart; 
        }
    }
}
